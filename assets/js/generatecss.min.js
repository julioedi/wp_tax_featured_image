class CustomCssSheet{inited=!1;classNames={};classNamesList=new Set;classNamesListAdded=new Set;sheets=[null,1366,820,640].map((s=>{const e=document.createElement("style");return s&&(e.media=`all and (max-width:${s}px)`),document.head.appendChild(e),e}));constructor(){this.getTranformRegex(),this.init()}scapeChars(s){return s.replace(/([\\{}:()*+?.,^$|#\[\]\/])/g,"\\$1")}tranformKeys=["matrix","matrix3d","perspective","rotate","rotate3d","rotateX","rotateY","rotateZ","translate","translate3d","translateX","translateY","translateZ","scale","scale3d","scaleX","scaleY","scaleZ","skew","skewX","skewY"];tranformRegex=/^$/;tranformRegexVariant=/^$/;tranformRegexChilds=/^$/;getTranformRegex(){const s=this.tranformKeys.join("|");this.tranformRegex=new RegExp(`^(${s})(-[\\w|.|\\%]+)$`,"i"),this.tranformRegexChilds=new RegExp(`-(${s})-([\\w|.|\\%]+)+`,"ig"),this.tranformRegexVariant=new RegExp(`^transform(-(${s})(-[\\w|.|\\%]+)+)+$`,"i")}processTransform(s){const e=this.scapeChars(s),a=s.match(/^transform-\((--[a-z0-9\-_]+)\)$/i);if(a){const s=`transform: var(${a[1]})`;return this.classNames[e]=s,this.processClassname(e),this.reponsiveAdd(),!0}const t=s.match(/^transform-\[(.*?)\]/);if(t){const s=t[1].trim().replace(/\s+/g," ").replace(/(;|,)\s+/g,"$1 ");return this.classNames[e]="transform:"+s,this.processClassname(e),this.reponsiveAdd(),!0}const i=s.match(this.tranformRegex);if(i){const s=i[2].replace(/^\-/,"").replace(/\-+/g,", ");this.classNames[e]=`transform:${i[1]}(${s})`,this.processClassname(e),this.reponsiveAdd()}const r=s.match(this.tranformRegexVariant);if(r){const s=[...r[1].matchAll(this.tranformRegexChilds)].map((s=>`${s[1]}(${s[2].replace(/^\-/,"").replace(/\-+/g,", ")})`)),a="transform:"+s.join(" ");return this.classNames[e]=a,this.processClassname(e),this.reponsiveAdd(),!0}return!1}gotClassName(s){const e=[s];for(;e.length>0;){const s=e.pop();s.classList?.forEach((s=>{!this.classNamesList.has(s)||this.classNamesListAdded.has(s)?this.processTransform(s):this.processClassname(s)})),s.children&&Array.from(s.children).forEach((s=>e.push(s)))}}observer(){new MutationObserver((s=>{s.forEach((s=>{if("childList"===s.type&&s.addedNodes.forEach((s=>{1===s.nodeType&&s.classList.length>0&&this.gotClassName(s)})),"attributes"===s.type&&"class"===s.attributeName){const e=s.target;this.gotClassName(e)}}))})).observe(document.head.parentElement,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["class"]})}processClassname(s){if(this.classNamesListAdded.has(s))return;const e=s.match(/^(xl|md|sm)\:(.*?)$/);if(e)switch(e[1]){case"xl":this.addClass(s,1);break;case"md":this.addClass(s,2);break;case"sm":this.addClass(s,3)}else this.addClass(s)}addClass(s,e=0){const a=s.replace(/^(xl|md|sm)\:/,""),t=this.classNames[a]??null;if(t&&!this.classNamesListAdded.has(s)){this.classNamesListAdded.add(s);const a=`.${s.replace(/:/g,"\\:")}{${t}}`;try{this.sheets[e].sheet?.insertRule(a,this.sheets[e].sheet.cssRules.length)}catch(s){}}}async init(){if(this.inited)return;this.inited=!0;const s=["inherit","unset","initial"],e=["top","left","right","bottom"];[].concat(s,["left","center","right","justify","end","start"]).forEach((s=>{this.classNames[`text-${s}`]=`text-align:${s}`})),["aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred ","indigo  ","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen"].forEach((s=>{["background","background-color","color","border-color"].forEach((e=>{this.classNames[`${e}-${s}`]=`${e}:${s}`}))})),[...s,"absolute","fixed","relative","static","sticky","revert","revert-layer"].forEach((s=>{this.classNames[`position-${s}`]=`position:${s}`}));const a=["width","height"];for(let s=0;s<240;s++){const t=8*s;if(a.forEach(((s,e)=>{const a=0===e?"vw":"vh",i=`max-${s}`,r=`min-${s}`;this.classNames[`${s}-${t}`]=`${s}: ${t}px`,this.classNames[`${i}-${t}`]=`${i}: ${t}px`,this.classNames[`${r}-${t}`]=`${r}: ${t}px`,this.classNames[`${a}-min-${t}`]=`${r}: calc(100${a} - ${t}px)`,this.classNames[`${a}-max-${t}`]=`${i}: calc(100${a} - ${t}px)`,this.classNames[`${a}-min-${t}\\%`]=`${r}: ${t}${a}`,this.classNames[`${a}-max-${t}\\%`]=`${i}: ${t}${a}`,0===t&&(this.classNames[`${s}-auto`]=`${s}: auto`,this.classNames[`${i}-auto`]=`${i}: auto`,this.classNames[`${s}-full`]=`${s}: 100%`,this.classNames[`${i}-full`]=`${i}: 100%`,this.classNames[`${a}-${s}-full`]=`${i}: 100${a}`),t<100&&(this.classNames[`${s}-${t}\\%`]=`${s}: ${t}%`,this.classNames[`${i}-${t}\\%`]=`${i}: ${t}%`)})),t>0){this.classNames[`text-${t}`]=`font-size:${t}px;`,this.classNames[`line-height-${t}`]=`line-height:${t};`,this.classNames[`line-height-px-${t}`]=`line-height:${t}px;`;const s=(t/16).toString().replace(/(^\d+\.\d{0,4}).*?$/,"$1"),e=s.replace(/\./g,"_");this.classNames[`text-em-${e}`]=`font-size:${s}em;`,this.classNames[`text-rem-${e}`]=`font-size:${s}rem;`}this.classNames[`m-${s}`]=`margin:${s}px`,this.classNames[`p-${s}`]=`padding:${s}px`,this.classNames[`mx-${s}`]=`margin-left:${s}px;margin-right:${s}px`,this.classNames[`my-${s}`]=`margin-top:${s}px;margin-bottom:${s}px`,this.classNames[`px-${s}`]=`padding-left:${s}px;padding-right:${s}px`,this.classNames[`py-${s}`]=`padding-top:${s}px;padding-bottom:${s}px`,this.classNames[`border-${s}`]=`border-width:${s}px; border-style:solid`,this.classNames[`radius-${s}`]=`border-radius:${s}px`,[...e].forEach((a=>{const t=a[0];this.classNames[`p${t}-${s}`]=`padding-${a}:${s}px`,this.classNames[`m${t}-${s}`]=`margin-${a}:${s}px`,this.classNames[`m${t}-${s}`]=`margin-${a}:${s}px`,this.classNames[`border-${t}-${s}`]=`border-${a}:${s}px;`,[...e].forEach((e=>{if(e==a)return;const i=e[0];this.classNames[`border-${t}${i}-${s}`]=`border-${a}-${e}-radius:${s}px;`}))}))}["top","left","right","bottom","inset"].forEach((s=>{for(let e=0;e<=50;e++)this.classNames[`pos-${s}-${e}%`]=`${s}: ${e}%;`,this.classNames[`pos-${s}-${5*e}px`]=`${s}: ${5*e}px;`;this.classNames[`pos-${s}-auto`]=`${s}: auto;`,this.classNames[`pos-${s}-full`]=`${s}: 100%;`})),this.classNames["inset-0"]="top: 0; right: 0; bottom: 0; left: 0;",this.classNames["inset-full"]="top: 0; right: 0; bottom: 0; left: 0; width: 100%; height: 100%",["thin","extralight","light","normal","medium","semibold","bold","extrabold","black"].forEach(((s,e)=>{const a=100*(e+1);this.classNames[`font-${s}`]=`font-weight:${a};`})),["block","flex","grid","table"].forEach((s=>{const e="-"+s;this.classNames[`display${e}`]=`display:${s}`,this.classNames[`display-inline${e}`]=`display:inline${e}`}));const t=s=>[Math.round(2*s),Math.round(4*s),Math.round(6*s),Math.round(2*s)],i=(s,e=12)=>{const[a,i,r,l]=t(s),[o,n,c,h]=t(s/2),$=(e/200).toString().replace(/(^\d+\.\d{0,2}).*?$/,"$1");return`${a}px ${i}px ${r}px ${l}px rgba(0, 0, 0, ${$}), ${o}px ${n}px ${c}px ${h}px rgba(0, 0, 0, ${$})`};for(let s=0;s<48;s++){const e="box-shadow:"+i(s);this.classNames[`elevation-${s}`]=e;for(let e=0;e<101;e++)this.classNames[`elevation-${s}-alpha-${e}`]="box-shadow:"+i(s,e)}const r=Array.from(Array(25).keys());for(let s=0;s<r.length;s++){const e=s>0?`repeat(${s}, 1fr)`:"auto";this.classNames[`grid-${s}`]=`grid-template-columns:${e}`;for(let a=0;a<r.length;a++){const t=a>0?`repeat(${a}, 1fr)`:"auto";this.classNames[`grid-${s}-${a}`]=`grid-template-columns:${e};grid-template-rows:${t}`}["row","column"].forEach((a=>{const t=a.substring(0,3);this.classNames[`${t}s-${s}`]=`grid-template-${a}s:${e}`;const i=s>0?s:"auto";this.classNames[`${t}-start-${s}`]=`grid-${a}-start:${i}`,this.classNames[`${t}-end-${s}`]=`grid-${a}-end:${i}`;const l=`span ${s}`;if(this.classNames[`${t}-${s}`]=`grid-${a}:${s}`,s>0){this.classNames[`${t}-span-${s}`]=`grid-${a}:${l}`;for(let e=1;e<r.length;e++){const i=`span ${s}`;this.classNames[`${t}-${s}-${e}`]=`grid-${a}:${s}/${e}`,this.classNames[`${t}-span-${s}-${e}`]=`grid-${a}:${l}/${e}`,this.classNames[`${t}-${s}-span-${e}`]=`grid-${a}:${s}/${i}`,this.classNames[`${t}-span-${s}-span-${e}`]=`grid-${a}:${l}/${i}`}}}))}for(let s=0;s<96;s++)this.classNames[`gap-${s}`]=`gap:${s}px`,this.classNames[`row-gap-${s}`]=`row-gap:${s}px`,this.classNames[`column-gap-${s}`]=`column-gap:${s}px`;["normal","center","flex-start","flex-end","space-between","space-around","space-evenly","baseline","stretch"].forEach((s=>{const e=s.replace(/^(\w+\-)+(\w+)/,"$2");this.classNames[`justify-${e}`]=`justify-content:${s}`,this.classNames[`content-${e}`]=`align-content:${s}`,this.classNames[`items-${e}`]=`align-items:${s}`,this.classNames[`justify-items-${e}`]=`justify-items:${s}`}));const l=Object.keys(this.classNames),o=l.map((s=>`xl:${s}`)),n=l.map((s=>`md:${s}`)),c=l.map((s=>`sm:${s}`));[...l,...o,...n,...c].forEach((s=>this.classNamesList.add(s))),this.reponsiveAdd(),this.observer()}reponsiveAdd(){const s=Object.keys(this.classNames),e=s.map((s=>`xl:${s}`)),a=s.map((s=>`md:${s}`)),t=s.map((s=>`sm:${s}`));[...s,...e,...a,...t].forEach((s=>{this.classNamesList.has(s)||this.classNamesList.add(s)}))}}const globalSheet=new CustomCssSheet;